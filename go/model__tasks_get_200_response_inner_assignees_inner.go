/*
app.salesflare.com

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package salesflare

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TasksGet200ResponseInnerAssigneesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TasksGet200ResponseInnerAssigneesInner{}

// TasksGet200ResponseInnerAssigneesInner struct for TasksGet200ResponseInnerAssigneesInner
type TasksGet200ResponseInnerAssigneesInner struct {
	Id int32 `json:"id"`
	Email string `json:"email"`
	Picture string `json:"picture"`
	Name string `json:"name"`
	Disabled bool `json:"disabled"`
}

type _TasksGet200ResponseInnerAssigneesInner TasksGet200ResponseInnerAssigneesInner

// NewTasksGet200ResponseInnerAssigneesInner instantiates a new TasksGet200ResponseInnerAssigneesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTasksGet200ResponseInnerAssigneesInner(id int32, email string, picture string, name string, disabled bool) *TasksGet200ResponseInnerAssigneesInner {
	this := TasksGet200ResponseInnerAssigneesInner{}
	this.Id = id
	this.Email = email
	this.Picture = picture
	this.Name = name
	this.Disabled = disabled
	return &this
}

// NewTasksGet200ResponseInnerAssigneesInnerWithDefaults instantiates a new TasksGet200ResponseInnerAssigneesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTasksGet200ResponseInnerAssigneesInnerWithDefaults() *TasksGet200ResponseInnerAssigneesInner {
	this := TasksGet200ResponseInnerAssigneesInner{}
	return &this
}

// GetId returns the Id field value
func (o *TasksGet200ResponseInnerAssigneesInner) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *TasksGet200ResponseInnerAssigneesInner) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *TasksGet200ResponseInnerAssigneesInner) SetId(v int32) {
	o.Id = v
}

// GetEmail returns the Email field value
func (o *TasksGet200ResponseInnerAssigneesInner) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *TasksGet200ResponseInnerAssigneesInner) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *TasksGet200ResponseInnerAssigneesInner) SetEmail(v string) {
	o.Email = v
}

// GetPicture returns the Picture field value
func (o *TasksGet200ResponseInnerAssigneesInner) GetPicture() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Picture
}

// GetPictureOk returns a tuple with the Picture field value
// and a boolean to check if the value has been set.
func (o *TasksGet200ResponseInnerAssigneesInner) GetPictureOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Picture, true
}

// SetPicture sets field value
func (o *TasksGet200ResponseInnerAssigneesInner) SetPicture(v string) {
	o.Picture = v
}

// GetName returns the Name field value
func (o *TasksGet200ResponseInnerAssigneesInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *TasksGet200ResponseInnerAssigneesInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *TasksGet200ResponseInnerAssigneesInner) SetName(v string) {
	o.Name = v
}

// GetDisabled returns the Disabled field value
func (o *TasksGet200ResponseInnerAssigneesInner) GetDisabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Disabled
}

// GetDisabledOk returns a tuple with the Disabled field value
// and a boolean to check if the value has been set.
func (o *TasksGet200ResponseInnerAssigneesInner) GetDisabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Disabled, true
}

// SetDisabled sets field value
func (o *TasksGet200ResponseInnerAssigneesInner) SetDisabled(v bool) {
	o.Disabled = v
}

func (o TasksGet200ResponseInnerAssigneesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TasksGet200ResponseInnerAssigneesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["email"] = o.Email
	toSerialize["picture"] = o.Picture
	toSerialize["name"] = o.Name
	toSerialize["disabled"] = o.Disabled
	return toSerialize, nil
}

func (o *TasksGet200ResponseInnerAssigneesInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"email",
		"picture",
		"name",
		"disabled",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTasksGet200ResponseInnerAssigneesInner := _TasksGet200ResponseInnerAssigneesInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTasksGet200ResponseInnerAssigneesInner)

	if err != nil {
		return err
	}

	*o = TasksGet200ResponseInnerAssigneesInner(varTasksGet200ResponseInnerAssigneesInner)

	return err
}

type NullableTasksGet200ResponseInnerAssigneesInner struct {
	value *TasksGet200ResponseInnerAssigneesInner
	isSet bool
}

func (v NullableTasksGet200ResponseInnerAssigneesInner) Get() *TasksGet200ResponseInnerAssigneesInner {
	return v.value
}

func (v *NullableTasksGet200ResponseInnerAssigneesInner) Set(val *TasksGet200ResponseInnerAssigneesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableTasksGet200ResponseInnerAssigneesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableTasksGet200ResponseInnerAssigneesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTasksGet200ResponseInnerAssigneesInner(val *TasksGet200ResponseInnerAssigneesInner) *NullableTasksGet200ResponseInnerAssigneesInner {
	return &NullableTasksGet200ResponseInnerAssigneesInner{value: val, isSet: true}
}

func (v NullableTasksGet200ResponseInnerAssigneesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTasksGet200ResponseInnerAssigneesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


