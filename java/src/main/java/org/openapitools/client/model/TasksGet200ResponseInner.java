/*
 * app.salesflare.com
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.TasksGet200ResponseInnerAccount;
import org.openapitools.client.model.TasksGet200ResponseInnerAssigneesInner;
import org.openapitools.client.model.TasksGet200ResponseInnerEmail;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TasksGet200ResponseInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-21T01:27:30.481182-07:00[America/Los_Angeles]")
public class TasksGet200ResponseInner {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_ACCOUNT = "account";
  @SerializedName(SERIALIZED_NAME_ACCOUNT)
  private TasksGet200ResponseInnerAccount account;

  public static final String SERIALIZED_NAME_CREATOR = "creator";
  @SerializedName(SERIALIZED_NAME_CREATOR)
  private Integer creator;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_REMINDER_DATE = "reminder_date";
  @SerializedName(SERIALIZED_NAME_REMINDER_DATE)
  private String reminderDate;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private TasksGet200ResponseInnerEmail email;

  public static final String SERIALIZED_NAME_COMPANY = "company";
  @SerializedName(SERIALIZED_NAME_COMPANY)
  private Object company = null;

  public static final String SERIALIZED_NAME_MEETING = "meeting";
  @SerializedName(SERIALIZED_NAME_MEETING)
  private Object meeting = null;

  public static final String SERIALIZED_NAME_COMPLETED = "completed";
  @SerializedName(SERIALIZED_NAME_COMPLETED)
  private Boolean completed;

  public static final String SERIALIZED_NAME_COMPLETION_DATE = "completion_date";
  @SerializedName(SERIALIZED_NAME_COMPLETION_DATE)
  private Object completionDate = null;

  public static final String SERIALIZED_NAME_COMPLETOR = "completor";
  @SerializedName(SERIALIZED_NAME_COMPLETOR)
  private Object completor = null;

  public static final String SERIALIZED_NAME_ARCHIVED = "archived";
  @SerializedName(SERIALIZED_NAME_ARCHIVED)
  private Boolean archived;

  public static final String SERIALIZED_NAME_ARCHIVE_DATE = "archive_date";
  @SerializedName(SERIALIZED_NAME_ARCHIVE_DATE)
  private Object archiveDate = null;

  public static final String SERIALIZED_NAME_ARCHIVOR = "archivor";
  @SerializedName(SERIALIZED_NAME_ARCHIVOR)
  private Object archivor = null;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_BY = "last_modified_by";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_BY)
  private Integer lastModifiedBy;

  public static final String SERIALIZED_NAME_CREATION_DATE = "creation_date";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  private String creationDate;

  public static final String SERIALIZED_NAME_MODIFICATION_DATE = "modification_date";
  @SerializedName(SERIALIZED_NAME_MODIFICATION_DATE)
  private String modificationDate;

  public static final String SERIALIZED_NAME_ASSIGNEES = "assignees";
  @SerializedName(SERIALIZED_NAME_ASSIGNEES)
  private List<TasksGet200ResponseInnerAssigneesInner> assignees = new ArrayList<>();

  public static final String SERIALIZED_NAME_CAN_EDIT = "can_edit";
  @SerializedName(SERIALIZED_NAME_CAN_EDIT)
  private Boolean canEdit;

  public TasksGet200ResponseInner() {
  }

  public TasksGet200ResponseInner id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public TasksGet200ResponseInner type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nonnull
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  public TasksGet200ResponseInner account(TasksGet200ResponseInnerAccount account) {
    this.account = account;
    return this;
  }

   /**
   * Get account
   * @return account
  **/
  @javax.annotation.Nonnull
  public TasksGet200ResponseInnerAccount getAccount() {
    return account;
  }

  public void setAccount(TasksGet200ResponseInnerAccount account) {
    this.account = account;
  }


  public TasksGet200ResponseInner creator(Integer creator) {
    this.creator = creator;
    return this;
  }

   /**
   * Get creator
   * @return creator
  **/
  @javax.annotation.Nullable
  public Integer getCreator() {
    return creator;
  }

  public void setCreator(Integer creator) {
    this.creator = creator;
  }


  public TasksGet200ResponseInner description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nonnull
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public TasksGet200ResponseInner reminderDate(String reminderDate) {
    this.reminderDate = reminderDate;
    return this;
  }

   /**
   * Get reminderDate
   * @return reminderDate
  **/
  @javax.annotation.Nonnull
  public String getReminderDate() {
    return reminderDate;
  }

  public void setReminderDate(String reminderDate) {
    this.reminderDate = reminderDate;
  }


  public TasksGet200ResponseInner email(TasksGet200ResponseInnerEmail email) {
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @javax.annotation.Nonnull
  public TasksGet200ResponseInnerEmail getEmail() {
    return email;
  }

  public void setEmail(TasksGet200ResponseInnerEmail email) {
    this.email = email;
  }


  public TasksGet200ResponseInner company(Object company) {
    this.company = company;
    return this;
  }

   /**
   * Get company
   * @return company
  **/
  @javax.annotation.Nullable
  public Object getCompany() {
    return company;
  }

  public void setCompany(Object company) {
    this.company = company;
  }


  public TasksGet200ResponseInner meeting(Object meeting) {
    this.meeting = meeting;
    return this;
  }

   /**
   * Get meeting
   * @return meeting
  **/
  @javax.annotation.Nullable
  public Object getMeeting() {
    return meeting;
  }

  public void setMeeting(Object meeting) {
    this.meeting = meeting;
  }


  public TasksGet200ResponseInner completed(Boolean completed) {
    this.completed = completed;
    return this;
  }

   /**
   * Get completed
   * @return completed
  **/
  @javax.annotation.Nonnull
  public Boolean getCompleted() {
    return completed;
  }

  public void setCompleted(Boolean completed) {
    this.completed = completed;
  }


  public TasksGet200ResponseInner completionDate(Object completionDate) {
    this.completionDate = completionDate;
    return this;
  }

   /**
   * Get completionDate
   * @return completionDate
  **/
  @javax.annotation.Nullable
  public Object getCompletionDate() {
    return completionDate;
  }

  public void setCompletionDate(Object completionDate) {
    this.completionDate = completionDate;
  }


  public TasksGet200ResponseInner completor(Object completor) {
    this.completor = completor;
    return this;
  }

   /**
   * Get completor
   * @return completor
  **/
  @javax.annotation.Nullable
  public Object getCompletor() {
    return completor;
  }

  public void setCompletor(Object completor) {
    this.completor = completor;
  }


  public TasksGet200ResponseInner archived(Boolean archived) {
    this.archived = archived;
    return this;
  }

   /**
   * Get archived
   * @return archived
  **/
  @javax.annotation.Nonnull
  public Boolean getArchived() {
    return archived;
  }

  public void setArchived(Boolean archived) {
    this.archived = archived;
  }


  public TasksGet200ResponseInner archiveDate(Object archiveDate) {
    this.archiveDate = archiveDate;
    return this;
  }

   /**
   * Get archiveDate
   * @return archiveDate
  **/
  @javax.annotation.Nullable
  public Object getArchiveDate() {
    return archiveDate;
  }

  public void setArchiveDate(Object archiveDate) {
    this.archiveDate = archiveDate;
  }


  public TasksGet200ResponseInner archivor(Object archivor) {
    this.archivor = archivor;
    return this;
  }

   /**
   * Get archivor
   * @return archivor
  **/
  @javax.annotation.Nullable
  public Object getArchivor() {
    return archivor;
  }

  public void setArchivor(Object archivor) {
    this.archivor = archivor;
  }


  public TasksGet200ResponseInner lastModifiedBy(Integer lastModifiedBy) {
    this.lastModifiedBy = lastModifiedBy;
    return this;
  }

   /**
   * Get lastModifiedBy
   * @return lastModifiedBy
  **/
  @javax.annotation.Nullable
  public Integer getLastModifiedBy() {
    return lastModifiedBy;
  }

  public void setLastModifiedBy(Integer lastModifiedBy) {
    this.lastModifiedBy = lastModifiedBy;
  }


  public TasksGet200ResponseInner creationDate(String creationDate) {
    this.creationDate = creationDate;
    return this;
  }

   /**
   * Get creationDate
   * @return creationDate
  **/
  @javax.annotation.Nonnull
  public String getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(String creationDate) {
    this.creationDate = creationDate;
  }


  public TasksGet200ResponseInner modificationDate(String modificationDate) {
    this.modificationDate = modificationDate;
    return this;
  }

   /**
   * Get modificationDate
   * @return modificationDate
  **/
  @javax.annotation.Nonnull
  public String getModificationDate() {
    return modificationDate;
  }

  public void setModificationDate(String modificationDate) {
    this.modificationDate = modificationDate;
  }


  public TasksGet200ResponseInner assignees(List<TasksGet200ResponseInnerAssigneesInner> assignees) {
    this.assignees = assignees;
    return this;
  }

  public TasksGet200ResponseInner addAssigneesItem(TasksGet200ResponseInnerAssigneesInner assigneesItem) {
    if (this.assignees == null) {
      this.assignees = new ArrayList<>();
    }
    this.assignees.add(assigneesItem);
    return this;
  }

   /**
   * Get assignees
   * @return assignees
  **/
  @javax.annotation.Nonnull
  public List<TasksGet200ResponseInnerAssigneesInner> getAssignees() {
    return assignees;
  }

  public void setAssignees(List<TasksGet200ResponseInnerAssigneesInner> assignees) {
    this.assignees = assignees;
  }


  public TasksGet200ResponseInner canEdit(Boolean canEdit) {
    this.canEdit = canEdit;
    return this;
  }

   /**
   * Get canEdit
   * @return canEdit
  **/
  @javax.annotation.Nonnull
  public Boolean getCanEdit() {
    return canEdit;
  }

  public void setCanEdit(Boolean canEdit) {
    this.canEdit = canEdit;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TasksGet200ResponseInner tasksGet200ResponseInner = (TasksGet200ResponseInner) o;
    return Objects.equals(this.id, tasksGet200ResponseInner.id) &&
        Objects.equals(this.type, tasksGet200ResponseInner.type) &&
        Objects.equals(this.account, tasksGet200ResponseInner.account) &&
        Objects.equals(this.creator, tasksGet200ResponseInner.creator) &&
        Objects.equals(this.description, tasksGet200ResponseInner.description) &&
        Objects.equals(this.reminderDate, tasksGet200ResponseInner.reminderDate) &&
        Objects.equals(this.email, tasksGet200ResponseInner.email) &&
        Objects.equals(this.company, tasksGet200ResponseInner.company) &&
        Objects.equals(this.meeting, tasksGet200ResponseInner.meeting) &&
        Objects.equals(this.completed, tasksGet200ResponseInner.completed) &&
        Objects.equals(this.completionDate, tasksGet200ResponseInner.completionDate) &&
        Objects.equals(this.completor, tasksGet200ResponseInner.completor) &&
        Objects.equals(this.archived, tasksGet200ResponseInner.archived) &&
        Objects.equals(this.archiveDate, tasksGet200ResponseInner.archiveDate) &&
        Objects.equals(this.archivor, tasksGet200ResponseInner.archivor) &&
        Objects.equals(this.lastModifiedBy, tasksGet200ResponseInner.lastModifiedBy) &&
        Objects.equals(this.creationDate, tasksGet200ResponseInner.creationDate) &&
        Objects.equals(this.modificationDate, tasksGet200ResponseInner.modificationDate) &&
        Objects.equals(this.assignees, tasksGet200ResponseInner.assignees) &&
        Objects.equals(this.canEdit, tasksGet200ResponseInner.canEdit);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, type, account, creator, description, reminderDate, email, company, meeting, completed, completionDate, completor, archived, archiveDate, archivor, lastModifiedBy, creationDate, modificationDate, assignees, canEdit);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TasksGet200ResponseInner {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    creator: ").append(toIndentedString(creator)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    reminderDate: ").append(toIndentedString(reminderDate)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    company: ").append(toIndentedString(company)).append("\n");
    sb.append("    meeting: ").append(toIndentedString(meeting)).append("\n");
    sb.append("    completed: ").append(toIndentedString(completed)).append("\n");
    sb.append("    completionDate: ").append(toIndentedString(completionDate)).append("\n");
    sb.append("    completor: ").append(toIndentedString(completor)).append("\n");
    sb.append("    archived: ").append(toIndentedString(archived)).append("\n");
    sb.append("    archiveDate: ").append(toIndentedString(archiveDate)).append("\n");
    sb.append("    archivor: ").append(toIndentedString(archivor)).append("\n");
    sb.append("    lastModifiedBy: ").append(toIndentedString(lastModifiedBy)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    modificationDate: ").append(toIndentedString(modificationDate)).append("\n");
    sb.append("    assignees: ").append(toIndentedString(assignees)).append("\n");
    sb.append("    canEdit: ").append(toIndentedString(canEdit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("type");
    openapiFields.add("account");
    openapiFields.add("creator");
    openapiFields.add("description");
    openapiFields.add("reminder_date");
    openapiFields.add("email");
    openapiFields.add("company");
    openapiFields.add("meeting");
    openapiFields.add("completed");
    openapiFields.add("completion_date");
    openapiFields.add("completor");
    openapiFields.add("archived");
    openapiFields.add("archive_date");
    openapiFields.add("archivor");
    openapiFields.add("last_modified_by");
    openapiFields.add("creation_date");
    openapiFields.add("modification_date");
    openapiFields.add("assignees");
    openapiFields.add("can_edit");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("type");
    openapiRequiredFields.add("account");
    openapiRequiredFields.add("creator");
    openapiRequiredFields.add("description");
    openapiRequiredFields.add("reminder_date");
    openapiRequiredFields.add("email");
    openapiRequiredFields.add("company");
    openapiRequiredFields.add("meeting");
    openapiRequiredFields.add("completed");
    openapiRequiredFields.add("completion_date");
    openapiRequiredFields.add("completor");
    openapiRequiredFields.add("archived");
    openapiRequiredFields.add("archive_date");
    openapiRequiredFields.add("archivor");
    openapiRequiredFields.add("last_modified_by");
    openapiRequiredFields.add("creation_date");
    openapiRequiredFields.add("modification_date");
    openapiRequiredFields.add("assignees");
    openapiRequiredFields.add("can_edit");
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to TasksGet200ResponseInner
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TasksGet200ResponseInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TasksGet200ResponseInner is not found in the empty JSON string", TasksGet200ResponseInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TasksGet200ResponseInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TasksGet200ResponseInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : TasksGet200ResponseInner.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("type").toString()));
      }
      // validate the required field `account`
      TasksGet200ResponseInnerAccount.validateJsonElement(jsonObj.get("account"));
      if (!jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if (!jsonObj.get("reminder_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reminder_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reminder_date").toString()));
      }
      // validate the required field `email`
      TasksGet200ResponseInnerEmail.validateJsonElement(jsonObj.get("email"));
      if (!jsonObj.get("creation_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `creation_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("creation_date").toString()));
      }
      if (!jsonObj.get("modification_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `modification_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("modification_date").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("assignees").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `assignees` to be an array in the JSON string but got `%s`", jsonObj.get("assignees").toString()));
      }

      JsonArray jsonArrayassignees = jsonObj.getAsJsonArray("assignees");
      // validate the required field `assignees` (array)
      for (int i = 0; i < jsonArrayassignees.size(); i++) {
        TasksGet200ResponseInnerAssigneesInner.validateJsonElement(jsonArrayassignees.get(i));
      };
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TasksGet200ResponseInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TasksGet200ResponseInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TasksGet200ResponseInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TasksGet200ResponseInner.class));

       return (TypeAdapter<T>) new TypeAdapter<TasksGet200ResponseInner>() {
           @Override
           public void write(JsonWriter out, TasksGet200ResponseInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TasksGet200ResponseInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of TasksGet200ResponseInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of TasksGet200ResponseInner
  * @throws IOException if the JSON string is invalid with respect to TasksGet200ResponseInner
  */
  public static TasksGet200ResponseInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TasksGet200ResponseInner.class);
  }

 /**
  * Convert an instance of TasksGet200ResponseInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

