/*
 * app.salesflare.com
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.TasksGet200ResponseInner;
import org.openapitools.client.model.TasksPost200Response;
import org.openapitools.client.model.V1MPost200Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * /messenger/web/metrics
     *
     * **Host**: http://api-iam.intercom.io
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void messengerWebMetricsPostTest() throws ApiException {
        String appId = null;
        String v = null;
        String g = null;
        String s = null;
        String r = null;
        String platform = null;
        String installationType = null;
        String idempotencyKey = null;
        String internal = null;
        String isIntersectionBooted = null;
        String pageTitle = null;
        String userActiveCompanyId = null;
        String metrics = null;
        String logs = null;
        String opMetrics = null;
        String hcMetrics = null;
        String referer = null;
        String anonymousSession = null;
        String deviceIdentifier = null;
        api.messengerWebMetricsPost(appId, v, g, s, r, platform, installationType, idempotencyKey, internal, isIntersectionBooted, pageTitle, userActiveCompanyId, metrics, logs, opMetrics, hcMetrics, referer, anonymousSession, deviceIdentifier);
        // TODO: test validations
    }

    /**
     * /tasks
     *
     * **Host**: http://api.salesflare.com
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tasksGetTest() throws ApiException {
        String limit = null;
        String q = null;
        List<TasksGet200ResponseInner> response = api.tasksGet(limit, q);
        // TODO: test validations
    }

    /**
     * /tasks
     *
     * **Host**: http://api.salesflare.com
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tasksPostTest() throws ApiException {
        TasksPost200Response response = api.tasksPost();
        // TODO: test validations
    }

    /**
     * /v1/m
     *
     * **Host**: http://api.segment.io
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v1MPostTest() throws ApiException {
        V1MPost200Response response = api.v1MPost();
        // TODO: test validations
    }

}
